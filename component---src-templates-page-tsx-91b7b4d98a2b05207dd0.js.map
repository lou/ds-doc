{"version":3,"sources":["webpack:///./src/hooks/useSetIframeHeight.ts","webpack:///./src/components/content.tsx","webpack:///./src/templates/page.tsx"],"names":["ref","html","contentRef","useRef","useEffect","enhancedIframes","current","querySelectorAll","map","el","onLoad","e","currentTarget","contentWindow","postMessage","onMessage","data","documentHeight","style","height","forEach","enhancedIframe","window","addEventListener","removeEventListener","dangerouslySetInnerHTML","__html","Page","parent","menu","edges","length","node","key","id","to","parentSlug","path","title","page","query","styled","div"],"mappings":"igCAEO,ICCQ,cAAc,IDDKA,ECChBC,EAAW,EAAXA,KACVC,EAAaC,iBAAuB,MAE1C,ODJgCH,ECGbE,EDFnBE,qBAAU,WACR,IAIMC,EAAkB,EAJRL,EAAIM,QAAQC,iBAC1B,WAGmCC,KAAI,SAAAC,GAAE,MAAK,CAC9CC,OAAQ,SAAAC,GACNA,EAAEC,cAAcC,cAAcC,YAAY,oBAAqB,MAEjEC,UAAW,SAAAJ,GACLA,EAAEK,KAAKC,iBACTR,EAAGS,MAAMC,OAAYR,EAAEK,KAAKC,eAA5B,OAEJR,SAQF,OALAJ,EAAgBe,SAAQ,SAAAC,GACtBC,OAAOC,iBAAiB,UAAWF,EAAeN,WAClDM,EAAeZ,GAAGc,iBAAiB,OAAQF,EAAeX,WAGrD,WACLL,EAAgBe,SAAQ,SAAAC,GACtBC,OAAOE,oBAAoB,UAAWH,EAAeN,WACrDM,EAAeZ,GAAGe,oBAAoB,OAAQH,EAAeX,cAGhE,ICxBI,yBAAKV,IAAKE,EAAYuB,wBAAyB,CAAEC,OAAQzB,M,8QCAnD,sBAAc,IAAXe,EAAW,EAAXA,KAChB,OACE,kBAAC,IAAD,KACE,kBAACW,EAAD,KACGX,EAAKY,QAAU,kBAAC,EAAD,CAAS3B,KAAMe,EAAKY,OAAO3B,OAC1Ce,EAAKa,KAAKC,MAAMC,OAAS,GACxB,4BACGf,EAAKa,KAAKC,MAAMtB,KAAI,gBAAGwB,EAAH,EAAGA,KAAH,OACnB,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC,IAAD,CAAMC,GAAE,IAAMH,EAAKI,WAAaJ,EAAKK,MAASL,EAAKM,YAK3D,kBAAC,EAAD,CAASrC,KAAMe,EAAKuB,KAAKtC,UAdlB,IAoBFuC,EAAQ,YA6Bfb,EAAOc,IAAOC,IAAV","file":"component---src-templates-page-tsx-91b7b4d98a2b05207dd0.js","sourcesContent":["import { useEffect } from \"react\"\n\nexport const useSetIframeHeight = ref => {\n  useEffect(() => {\n    const iframes = ref.current.querySelectorAll(\n      \"iframe\"\n    ) as HTMLIFrameElement[]\n\n    const enhancedIframes = [...iframes].map(el => ({\n      onLoad: e => {\n        e.currentTarget.contentWindow.postMessage(\"getDocumentHeight\", \"*\")\n      },\n      onMessage: e => {\n        if (e.data.documentHeight)\n          el.style.height = `${e.data.documentHeight}px`\n      },\n      el,\n    }))\n\n    enhancedIframes.forEach(enhancedIframe => {\n      window.addEventListener(\"message\", enhancedIframe.onMessage)\n      enhancedIframe.el.addEventListener(\"load\", enhancedIframe.onLoad)\n    })\n\n    return () => {\n      enhancedIframes.forEach(enhancedIframe => {\n        window.removeEventListener(\"message\", enhancedIframe.onMessage)\n        enhancedIframe.el.removeEventListener(\"load\", enhancedIframe.onLoad)\n      })\n    }\n  }, [])\n}\n","import React, { useRef } from \"react\"\nimport { useSetIframeHeight } from \"../hooks/useSetIframeHeight\"\n\nexport default ({ html }) => {\n  const contentRef = useRef<HTMLDivElement>(null)\n  useSetIframeHeight(contentRef)\n  return <div ref={contentRef} dangerouslySetInnerHTML={{ __html: html }} />\n}\n","import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport styled from \"styled-components\"\nimport Content from \"../components/content\"\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <Page>\n        {data.parent && <Content html={data.parent.html} />}\n        {data.menu.edges.length > 0 && (\n          <ul>\n            {data.menu.edges.map(({ node }) => (\n              <li key={node.id}>\n                <Link to={`/${node.parentSlug}${node.path}`}>{node.title}</Link>\n              </li>\n            ))}\n          </ul>\n        )}\n        <Content html={data.page.html} />\n      </Page>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!, $parentSlug: String) {\n    page: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n        parentSlug\n      }\n    }\n    parent: markdownRemark(fields: { slug: { eq: $parentSlug, ne: null } }) {\n      html\n      fields {\n        slug\n        parentSlug\n      }\n    }\n    menu: allSectionMenuJson(filter: { parentSlug: { eq: $parentSlug } }) {\n      edges {\n        node {\n          id\n          path\n          title\n          parentSlug\n        }\n      }\n    }\n  }\n`\n\nconst Page = styled.div`\n  overflow-y: auto;\n  padding: 2rem;\n  flex-basis: 100%;\n  iframe {\n    width: 100%;\n    border: none;\n    overflow: visible;\n    flex-basis: 100%;\n  }\n`\n"],"sourceRoot":""}